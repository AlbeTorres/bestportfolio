---
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'
import RelatedPost from '../components/RelatedPost.astro'
import { slugify } from '../utils/functions'
import type { post } from '../utils/type'
import Layout from './Layout.astro'

interface Props {
  frontmatter: post
}

const { frontmatter } = Astro.props

const filtredPosts = await getCollection('posts', p => {
  if (
    p.data.draft !== true &&
    new Date(p.data.date) < new Date() &&
    p.data.tags.some(t => frontmatter.tags.includes(t)) &&
    p.data.title !== frontmatter.title
  ) {
    return p
  }
})

const relatedPosts = filtredPosts.slice(0, 4)
---

<Layout
  title={frontmatter.title}
  description={frontmatter.description}
  image={frontmatter.image.src.src}
>
  <header class='mb-5'>
    <div class='flex flex-col gap-y-4 mb-5'>
      <div class='space-y-2 gap-y-2'>
        <h1 class='text-3xl font-bold'>{frontmatter.title}</h1>
        <p class='text-xs'>
          by <a href={`/author/${slugify(frontmatter.author)}`}
            >{frontmatter.author} / {frontmatter.date}</a
          >
        </p>
      </div>
    </div>
    <Image
      src={frontmatter.image.src}
      alt={frontmatter.image.alt}
      width={1150}
      height={400}
      format='webp'
      class='w-full h-full md:max-w-[1150px] md:max-h-[400px] object-cover'
    />
  </header>
  <div class='lg:grid lg:grid-cols-[auto_30%] gap-x-4 relative overflow-auto'>
    <div>
      <slot />
    </div>
    <div class='sticky top-20'>
      <h3 class='text-lg font-bold my-4'>Tags:</h3>
      <div class='flex items-center flex-wrap justify-start gap-4'>
        {
          frontmatter.tags.map(c => (
            <a href={`/tag/${slugify(c)}`} class='p-2 bg-blue-700 text-white text-center shadow-md'>
              {c}
            </a>
          ))
        }
      </div>
      <RelatedPost frontmatter={relatedPosts} />
    </div>
  </div>
</Layout>
